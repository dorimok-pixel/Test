__version__ = 7, 7, 7
# name: AutoGifts
# meta developer: @mofkomodules
# description: –ê–≤—Ç–æ –ø–æ–¥–∞—Ä–∫–∏

import asyncio
import logging
from telethon import TelegramClient
from telethon.tl.functions.account import UpdateProfileRequest

logger = logging.getLogger(__name__)

class GiftChanger:
    def __init__(self, client: TelegramClient, interval: int = 3600):
        self.client = client
        self.interval = interval
        self.is_running = False
        self.task = None
        self.current_gift_index = 0
        self.gifts = ["üéÅ", "üéÑ", "üéÖ", "ü§∂", "üß¶", "üåü", "‚≠ê", "‚ú®", "‚ùÑÔ∏è"]
        
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–æ–≤"""
        if self.is_running:
            return
            
        self.is_running = True
        self.task = asyncio.create_task(self._gift_loop())
        logger.info(f"Gift changer –∑–∞–ø—É—â–µ–Ω —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º {self.interval} —Å–µ–∫")
        
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–æ–≤"""
        if not self.is_running:
            return
            
        self.is_running = False
        if self.task:
            self.task.cancel()
        logger.info("Gift changer –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
    async def _gift_loop(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å–º–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–æ–≤"""
        while self.is_running:
            try:
                await self._change_gift()
                await asyncio.sleep(self.interval)
            except asyncio.CancelledError:
                break
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ —Å–º–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–æ–≤: {e}")
                await asyncio.sleep(60)
    
    async def _change_gift(self):
        """–°–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ"""
        try:
            me = await self.client.get_me()
            current_first_name = me.first_name or ""
            
            # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–æ–¥–∞—Ä–∫–∏ –∏–∑ –∏–º–µ–Ω–∏
            clean_name = current_first_name
            for gift in self.gifts:
                clean_name = clean_name.replace(gift, "").strip()
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫
            gift = self.gifts[self.current_gift_index]
            new_first_name = f"{clean_name} {gift}".strip()
            
            await self.client(UpdateProfileRequest(first_name=new_first_name))
            
            self.current_gift_index = (self.current_gift_index + 1) % len(self.gifts)
            logger.debug(f"–ü–æ–¥–∞—Ä–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω: {new_first_name}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–æ–¥–∞—Ä–∫–∞: {e}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
async def initialize_gift_changer(client: TelegramClient, config: dict):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —Å–º–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–æ–≤"""
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è GiftChanger...")
    
    interval = config.get('gift_change_interval', 3600)
    gift_changer = GiftChanger(client, interval)
    
    # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ
    if config.get('gift_auto_start', True):
        await gift_changer.start()
    
    logger.info("–ú–æ–¥—É–ª—å GiftChanger –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    return gift_changer
